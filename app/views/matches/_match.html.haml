.row
  .col-md-12
    %h1
      #{match.area.name}:
      %span{class: match.goodness} #{match.score.to_i}%
      match
      = link_to 'javascript:window.print()', class: 'print-button' do
        %span.glyphicon.glyphicon-print
        Print
.row#matchdetails
  .col-md-6.col-xs-12
    #matchmap
    :javascript
      initialize_matchmap(#{matches_map_json [@match]}, true)
  .col-md-6.col-xs-12
    - if match.dealbreakers.any?
      .dealbreakers
        %h2
          %span.dealbreaker.icon
          Dealbreakers for you
        %table.table.table-striped.match-details
          = render partial: 'match_row', collection: match.dealbreakers.sort_by {|a| a.question.ftype}, locals: {area: match.area}
    - if match.good_answers.any?
      .good-answers
        %h2
          %span.good.icon
          - case match.goodness
          - when :good
            Why #{match.area.name} is a good match for you
          - else
            Where #{match.area.name} matches
        %table.table.table-striped.match-details
          = render partial: 'match_row', collection: match.good_answers.sort_by {|a| a.question.ftype}, locals: {area: match.area}
    - if match.bad_answers.any?
      .bad-answers
        %h2
          %span.bad.icon
          - case match.goodness
          - when :bad
            Why #{match.area.name} is not such a good match for you
          - else
            Where #{match.area.name} doesn't match
        %table.table.table-striped.match-details
          = render partial: 'match_row', collection: match.bad_answers.sort_by {|a| a.question.ftype}, locals: {area: match.area}
    .area_info
      %h2
        %span.info.icon
        Area information
      %table.table.table-striped.match-details
        - if @closest_nns
          %tr
            %th Nearest Neighbourhood Network
            %td
              = @closest_nns.name
            %td.map-button
              = show_features_on_map_button([@closest_nns])
